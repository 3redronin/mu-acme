package io.muserver.acme;

import io.muserver.HttpsConfigBuilder;
import io.muserver.MuHandler;
import io.muserver.MuServer;

import java.io.InputStream;
import java.util.Properties;

/**
 * <p>This class managers the generation and automatic renewal of HTTPS certificates by using an ACME certificate
 * authority such as <a href="https://letsencrypt.org/">Let's Encrypt</a>.</p>
 * <p>To create a cert manager, please use {@link AcmeCertManagerBuilder#acmeCertManager()} or a convenience
 * method such as {@link AcmeCertManagerBuilder#letsEncrypt()}.</p>
 */
public interface AcmeCertManager {

    /**
     * <p>Starts a background thread which creates or renews the certificate when needed. This is set to run
     * immediately and then once every 24 hours. Certs will be renewed when they are due to expire in less
     * than 3 days.</p>
     * @param muServer A started Mu Server instance, which means this method should be called after starting your server.
     */
    void start(MuServer muServer);

    /**
     * Stops the periodic cert renewal checks.
     */
    void stop();

    /**
     * Forces a renew of the certificate now, even if the certs are not nearing expiry.
     * @throws IllegalStateException Thrown if called before {@link #start(MuServer)} is called.
     * @throws Exception Thrown if the certificate cannot be loaded.
     */
    void forceRenew() throws Exception;

    /**
     * <p>Creates an HTTPS config builder from the certificate previously generated by this manager. Use this
     * to configure your server on startup. For example:</p>
     * <pre><code>
     *  server = muServer()
     *      .withHttpPort(80)
     *      .withHttpsPort(443)
     *      .withHttpsConfig(acmeCertManager.createHttpsConfig())
     *      // add handlers
     *      .start();
     * </code></pre>
     *
     * <p>The first time a server is started, there will be no certificate, in which case a self-signed
     * localhost certificate will be temporarily used until a signed cert is retrieved.</p>
     *
     * @return An SSL Context
     * @throws Exception Thrown if the certificate cannot be loaded.
     */
    HttpsConfigBuilder createHttpsConfig() throws Exception;


    /**
     * Creates a handler that will handle the requests needed from the ACME Certificate Authority
     * to prove that you own the domain name specified.
     * @return A handler that you should add as the first handler to your Mu Server.
     */
    MuHandler createHandler();

    /**
     * @return Returns the current version of MuServer, or 0.x if unknown
     */
    static String artifactVersion() {
        try {
            Properties props = new Properties();
            InputStream in = AcmeCertManagerImpl.class.getResourceAsStream("/META-INF/maven/io.muserver/mu-acme/pom.properties");
            if (in == null) {
                return "1.x";
            }
            try {
                props.load(in);
            } finally {
                in.close();
            }
            return props.getProperty("version");
        } catch (Exception ex) {
            return "1.x";
        }
    }
}
